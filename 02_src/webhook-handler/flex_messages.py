"""
Flex Message „ÉÜ„É≥„Éó„É¨„Éº„Éà
"""

def create_task_list_flex(tasks, user_name="", show_all=False):
    """
    „Çø„Çπ„ÇØ‰∏ÄË¶ß„ÅÆFlex Message„ÇíÁîüÊàêÔºàÁ∏¶„Çπ„ÇØ„É≠„Éº„É´ÂΩ¢ÂºèÔºâ

    Args:
        tasks: „Çø„Çπ„ÇØ„ÅÆ„É™„Çπ„Éà [(id, title, due_date, status, priority, category), ...]
        user_name: „É¶„Éº„Ç∂„ÉºÂêçÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
        show_all: ÂÖ®‰ª∂Ë°®Á§∫„Åô„Çã„Åã„Å©„ÅÜ„ÅãÔºà„Éá„Éï„Ç©„É´„Éà„ÅØÂÖàÈ†≠5‰ª∂„ÅÆ„ÅøÔºâ

    Returns:
        Flex Message JSON
    """

    # Êú™ÂÆå‰∫Ü„Çø„Çπ„ÇØ„Å®ÂÆå‰∫ÜÊ∏à„Åø„Çø„Çπ„ÇØ„ÇíÂàÜÈõ¢
    pending_tasks = [t for t in tasks if t[3] == 'pending']
    completed_tasks = [t for t in tasks if t[3] == 'completed']

    # „Çø„Çπ„ÇØ„Åå„Å™„ÅÑÂ†¥Âêà
    if not tasks:
        return {
            "type": "bubble",
            "body": {
                "type": "box",
                "layout": "vertical",
                "contents": [
                    {
                        "type": "text",
                        "text": "ÁôªÈå≤„Åï„Çå„Å¶„ÅÑ„Çã„Çø„Çπ„ÇØ„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì",
                        "wrap": True,
                        "color": "#999999",
                        "align": "center"
                    }
                ]
            }
        }

    # Body„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Çí‰ΩúÊàê
    body_contents = []

    # Êú™ÂÆå‰∫Ü„Çø„Çπ„ÇØÔºàshow_all=True„Å™„ÇâÂÖ®‰ª∂„ÄÅFalse„Å™„ÇâÊúÄÂ§ß5‰ª∂Ôºâ
    display_count = len(pending_tasks) if show_all else min(5, len(pending_tasks))
    for i, task in enumerate(pending_tasks[:display_count]):
        task_id, title, due_date, status, priority, category = task

        # ÂÑ™ÂÖàÂ∫¶„Å´„Çà„ÇãÁµµÊñáÂ≠óË®≠ÂÆö
        priority_emoji = "üî¥" if priority == "high" else "üü°" if priority == "medium" else "‚ö™"

        # ÊúüÈôêË°®Á§∫
        due_str = due_date.strftime("%m/%d") if due_date else "ÊúüÈôê„Å™„Åó"

        # „Çø„Çπ„ÇØ„Éú„ÉÉ„ÇØ„Çπ
        task_box = {
            "type": "box",
            "layout": "vertical",
            "contents": [
                {
                    "type": "box",
                    "layout": "horizontal",
                    "contents": [
                        {
                            "type": "text",
                            "text": priority_emoji,
                            "size": "sm",
                            "flex": 0
                        },
                        {
                            "type": "text",
                            "text": title,
                            "weight": "bold",
                            "size": "md",
                            "flex": 5,
                            "margin": "sm",
                            "wrap": True,
                            "color": "#333333"
                        }
                    ]
                },
                {
                    "type": "box",
                    "layout": "horizontal",
                    "contents": [
                        {
                            "type": "text",
                            "text": f"ÊúüÈôê: {due_str}",
                            "size": "xs",
                            "color": "#999999",
                            "flex": 1
                        },
                        {
                            "type": "text",
                            "text": category,
                            "size": "xs",
                            "color": "#999999",
                            "align": "end",
                            "flex": 1
                        }
                    ],
                    "margin": "sm"
                },
                {
                    "type": "button",
                    "action": {
                        "type": "postback",
                        "label": "‚úÖ ÂÆå‰∫Ü",
                        "data": f"action=complete_task&task_id={task_id}",
                        "displayText": f"„Äå{title}„Äç„ÇíÂÆå‰∫Ü„Åó„Åæ„Åó„Åü"
                    },
                    "style": "primary",
                    "color": "#17C964",
                    "height": "sm",
                    "margin": "md"
                }
            ],
            "paddingAll": "12px",
            "backgroundColor": "#FFFFFF",
            "cornerRadius": "8px",
            "margin": "md" if i > 0 else "none"
        }

        body_contents.append(task_box)

        # „Çª„Éë„É¨„Éº„Çø„ÉºÔºàÊúÄÂæå‰ª•Â§ñÔºâ
        if i < display_count - 1 or (not show_all and len(pending_tasks) > 5) or completed_tasks:
            body_contents.append({
                "type": "separator",
                "margin": "md"
            })

    # „Äå„ÇÇ„Å£„Å®Ë¶ã„Çã„Äç„Éú„Çø„É≥Ôºà6‰ª∂‰ª•‰∏ä„ÅÇ„ÇãÂ†¥Âêà„Åß„ÄÅshow_all=False„ÅÆÊôÇ„ÅÆ„ÅøÔºâ
    if not show_all and len(pending_tasks) > 5:
        body_contents.append({
            "type": "button",
            "action": {
                "type": "message",
                "label": f"„ÇÇ„Å£„Å®Ë¶ã„Çã ({len(pending_tasks) - 5}‰ª∂)",
                "text": "ÂÖ®„Çø„Çπ„ÇØ"
            },
            "style": "link",
            "height": "sm",
            "margin": "md"
        })

        if completed_tasks:
            body_contents.append({
                "type": "separator",
                "margin": "md"
            })

    # ÂÆå‰∫ÜÊ∏à„Åø„Çø„Çπ„ÇØ„Çµ„Éû„É™„Éº
    if completed_tasks:
        # „Éò„ÉÉ„ÉÄ„Éº
        body_contents.append({
            "type": "box",
            "layout": "vertical",
            "contents": [
                {
                    "type": "text",
                    "text": f"‚úÖ ÂÆå‰∫ÜÊ∏à„Åø ({len(completed_tasks)}‰ª∂)",
                    "weight": "bold",
                    "size": "sm",
                    "color": "#17C964"
                }
            ],
            "paddingAll": "12px",
            "backgroundColor": "#F0F0F0",
            "cornerRadius": "8px",
            "margin": "md"
        })

        # ÂÆå‰∫ÜÊ∏à„Åø„Çø„Çπ„ÇØÔºàshow_all=True„Å™„ÇâÂÖ®‰ª∂„ÄÅFalse„Å™„ÇâÊúÄÊñ∞3‰ª∂Ôºâ
        completed_display_count = len(completed_tasks) if show_all else min(3, len(completed_tasks))
        for i, task in enumerate(completed_tasks[:completed_display_count]):
            task_id, title, due_date, status, priority, category = task

            # ÂÆå‰∫ÜÊ∏à„Åø„Çø„Çπ„ÇØ„Éú„ÉÉ„ÇØ„ÇπÔºàÊ®™‰∏¶„Å≥Ôºâ
            completed_task_box = {
                "type": "box",
                "layout": "horizontal",
                "contents": [
                    {
                        "type": "text",
                        "text": f"‚úÖ {title}",
                        "size": "sm",
                        "color": "#666666",
                        "wrap": True,
                        "flex": 5
                    },
                    {
                        "type": "text",
                        "text": "‚Ü©Ô∏è",
                        "size": "md",
                        "color": "#999999",
                        "flex": 0,
                        "align": "end",
                        "action": {
                            "type": "postback",
                            "data": f"action=uncomplete_task&task_id={task_id}",
                            "displayText": f"„Äå{title}„Äç„ÇíÊú™ÂÆå‰∫Ü„Å´Êàª„Åó„Åæ„Åó„Åü"
                        }
                    }
                ],
                "paddingAll": "8px",
                "backgroundColor": "#FAFAFA",
                "cornerRadius": "6px",
                "margin": "sm"
            }

            body_contents.append(completed_task_box)

    return {
        "type": "bubble",
        "header": {
            "type": "box",
            "layout": "vertical",
            "contents": [
                {
                    "type": "text",
                    "text": "üìã „Çø„Çπ„ÇØ‰∏ÄË¶ß",
                    "weight": "bold",
                    "size": "lg",
                    "color": "#333333"
                }
            ],
            "paddingAll": "15px",
            "backgroundColor": "#F7F7F7"
        },
        "body": {
            "type": "box",
            "layout": "vertical",
            "contents": body_contents,
            "paddingAll": "15px"
        }
    }


def create_task_completed_flex(task_title):
    """„Çø„Çπ„ÇØÂÆå‰∫Ü„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆFlex Message"""
    return {
        "type": "bubble",
        "body": {
            "type": "box",
            "layout": "vertical",
            "contents": [
                {
                    "type": "text",
                    "text": "‚úÖ „Çø„Çπ„ÇØÂÆå‰∫Ü",
                    "weight": "bold",
                    "color": "#17C964",
                    "size": "lg"
                },
                {
                    "type": "text",
                    "text": task_title,
                    "wrap": True,
                    "color": "#333333",
                    "margin": "md"
                },
                {
                    "type": "separator",
                    "margin": "lg"
                },
                {
                    "type": "text",
                    "text": "„ÅäÁñ≤„ÇåÊßò„Åß„Åó„ÅüÔºÅ",
                    "size": "sm",
                    "color": "#999999",
                    "margin": "lg",
                    "align": "center"
                }
            ]
        },
        "footer": {
            "type": "box",
            "layout": "vertical",
            "contents": [
                {
                    "type": "button",
                    "action": {
                        "type": "message",
                        "label": "„Çø„Çπ„ÇØ‰∏ÄË¶ß„ÇíË¶ã„Çã",
                        "text": "„Çø„Çπ„ÇØ"
                    },
                    "style": "link",
                    "height": "sm"
                }
            ]
        }
    }
